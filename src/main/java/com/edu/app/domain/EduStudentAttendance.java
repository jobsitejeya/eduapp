package com.edu.app.domain;
// Generated Jul 5, 2008 9:25:16 PM by Hibernate Tools 3.1.0.beta5


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * EduAcademic generated by hbm2java
 */
@Entity
@Table(name="edu_student_attendance")
public class EduStudentAttendance  extends BaseEntity {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	// Fields

	 private EduStudent eduStudent;
	 private Date attendanceDate = new Date();
	// private Integer period;
	 private char isAbsent = 'Y';
	// private String delete="false";
	 private EduInstClassSubject eduInstClassSubject;
	 private EduInstBranchSubject eduInstBranchSubject;
	 private EduPeriod eduPeriod;
	 
	// private int subjectID; 
	 

     // Constructors

    /** default constructor */
    public EduStudentAttendance() {
    }

    // Property accessors

@ManyToOne(cascade={},
            fetch=FetchType.LAZY)

    @JoinColumn(name="Fk_Student_Id", unique=false, nullable=false, insertable=true, updatable=true)
	public EduStudent getEduStudent() {
		return eduStudent;
	}

	public void setEduStudent(EduStudent eduStudent) {
		this.eduStudent = eduStudent;
	}


@Column(name="Attendance_Date", unique=false, nullable=false, insertable=true, updatable=true)
	public Date getAttendanceDate() {
		return attendanceDate;
	}

	public void setAttendanceDate(Date attendanceDate) {
		this.attendanceDate = attendanceDate;
	}

/*@Column(name="Period", unique=false, nullable=false, insertable=true, updatable=true, length=9)
	public Integer getPeriod() {
		return period;
	}

	public void setPeriod(Integer period) {
		this.period = period;
	}*/

@Column(name="Is_Absent", unique=false, nullable=false, insertable=true, updatable=true, length=1)
	public String getIsAbsent() {
	
	
	if (isAbsent == 'Y')
			return "true";
		else
			return "false";
	
		//return isAbsent;
	}

	public void setIsAbsent(String isAbsent) {
		
		if(isAbsent.charAt(0)=='t'){
			this.isAbsent='Y';
		}else if(isAbsent.charAt(0)=='f'){
			this.isAbsent='N';
		}else{
		this.isAbsent = isAbsent.charAt(0);
		}
	}

	/**
	 * @return the subjectID
	 *//*
	@Column(name="Fk_Subject_Id")
	public int getSubjectID() {
		return subjectID;
	}

	*//**
	 * @param subjectID the subjectID to set
	 *//*
	public void setSubjectID(int subjectID) {
		this.subjectID = subjectID;
	}*/

	/**
	 * @return the eduInstClassSubject
	 */
	@ManyToOne(cascade={},
            fetch=FetchType.LAZY)

    @JoinColumn(name="fk_edu_inst_class_subject_id", unique=false, nullable=false, insertable=true, updatable=true)
	public EduInstClassSubject getEduInstClassSubject() {
		return eduInstClassSubject;
	}

	/**
	 * @param eduInstClassSubject the eduInstClassSubject to set
	 */
	public void setEduInstClassSubject(EduInstClassSubject eduInstClassSubject) {
		this.eduInstClassSubject = eduInstClassSubject;
	}

	/**
	 * @return the eduInstBranchSubject
	 */
	@ManyToOne(cascade={},
            fetch=FetchType.LAZY)

    @JoinColumn(name="fk_edu_inst_branch_subject_id", unique=false, nullable=true, insertable=true, updatable=true)
	public EduInstBranchSubject getEduInstBranchSubject() {
		return eduInstBranchSubject;
	}

	/**
	 * @param eduInstBranchSubject the eduInstBranchSubject to set
	 */
	public void setEduInstBranchSubject(EduInstBranchSubject eduInstBranchSubject) {
		this.eduInstBranchSubject = eduInstBranchSubject;
	}

	/**
	 * @return the eduPeriod
	 */
	@ManyToOne(cascade={},
            fetch=FetchType.LAZY)

    @JoinColumn(name="fk_period_id", unique=false, nullable=true, insertable=true, updatable=true)
	public EduPeriod getEduPeriod() {
		return eduPeriod;
	}

	/**
	 * @param eduPeriod the eduPeriod to set
	 */
	public void setEduPeriod(EduPeriod eduPeriod) {
		this.eduPeriod = eduPeriod;
	}

	/**
	 * @return the delete
	 */
	
	/*public String getDelete() {
		
		if(isAbsent=='Y')
			return "false";
		else
		return "true";
	}*/

	/**
	 * @param delete the delete to set
	 */
	/*public void setDelete(String delete) {
		//this.delete = delete;
		if(delete.equals("true"))
			isAbsent='N';
		else
			isAbsent='Y';
	}*/
}

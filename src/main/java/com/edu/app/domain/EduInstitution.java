package com.edu.app.domain;
// Generated Jul 5, 2008 9:25:16 PM by Hibernate Tools 3.1.0.beta5


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * EduInstitution generated by hbm2java
 */
@Entity
@Table(name="edu_institution")
public class EduInstitution  extends BaseEntity {

    // Fields
     private EduInstitution eduInstitution;
     private String institutionName;
     private int institutionType;
     private String emailAddress;
     private String urlAddress;
     private Set<EduDocument> eduDocuments = new HashSet<EduDocument>(0);
     private Set<EduInstitution> eduInstitutions = new HashSet<EduInstitution>(0);
     private Set<EduInstitutionBranch> eduInstitutionBranchs = new HashSet<EduInstitutionBranch>(0);
     private Set<EduUser> eduUsers = new HashSet<EduUser>(0);
     private Set<EduInstitutionClass> eduInstitutionClasses = new HashSet<EduInstitutionClass>(0);

     // Constructors

    /** default constructor */
    public EduInstitution() {
    }

    // Property accessors
@ManyToOne(cascade={},
        fetch=FetchType.LAZY)

    @JoinColumn(name="Fk_Parent_Institution_Id", unique=false, nullable=true, insertable=true, updatable=true)
    public EduInstitution getEduInstitution() {
        return this.eduInstitution;
    }

    public void setEduInstitution(EduInstitution eduInstitution) {
        this.eduInstitution = eduInstitution;
    }

    @Column(name="Institution_Name", unique=false, nullable=false, insertable=true, updatable=true)
    public String getInstitutionName() {
        return this.institutionName;
    }

    public void setInstitutionName(String institutionName) {
        this.institutionName = institutionName;
    }

    @Column(name="Institution_Type", unique=false, nullable=false, insertable=true, updatable=true)
    public int getInstitutionType() {
        return this.institutionType;
    }

    public void setInstitutionType(int institutionType) {
        this.institutionType = institutionType;
    }

    @Column(name="Email_Address", unique=false, nullable=true, insertable=true, updatable=true)
    public String getEmailAddress() {
        return this.emailAddress;
    }

    public void setEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
    }

    @Column(name="Url_Address", unique=false, nullable=true, insertable=true, updatable=true, length=1000)
    public String getUrlAddress() {
        return this.urlAddress;
    }

    public void setUrlAddress(String urlAddress) {
        this.urlAddress = urlAddress;
    }

    @OneToMany(cascade={CascadeType.ALL}, fetch=FetchType.LAZY, mappedBy="eduInstitution")
    public Set<EduDocument> getEduDocuments() {
        return this.eduDocuments;
    }

    public void setEduDocuments(Set<EduDocument> eduDocuments) {
        this.eduDocuments = eduDocuments;
    }
    @OneToMany(cascade={CascadeType.ALL}, fetch=FetchType.LAZY, mappedBy="eduInstitution")
    public Set<EduInstitution> getEduInstitutions() {
        return this.eduInstitutions;
    }

    public void setEduInstitutions(Set<EduInstitution> eduInstitutions) {
        this.eduInstitutions = eduInstitutions;
    }
    @OneToMany(cascade={CascadeType.ALL}, fetch=FetchType.LAZY, mappedBy="eduInstitution")
    public Set<EduInstitutionBranch> getEduInstitutionBranchs() {
        return this.eduInstitutionBranchs;
    }

    public void setEduInstitutionBranchs(Set<EduInstitutionBranch> eduInstitutionBranchs) {
        this.eduInstitutionBranchs = eduInstitutionBranchs;
    }
    @OneToMany(cascade={CascadeType.ALL}, fetch=FetchType.LAZY, mappedBy="eduInstitution")
    public Set<EduUser> getEduUsers() {
        return this.eduUsers;
    }

    public void setEduUsers(Set<EduUser> eduUsers) {
        this.eduUsers = eduUsers;
    }
    @OneToMany(cascade={CascadeType.ALL}, fetch=FetchType.LAZY, mappedBy="eduInstitution")
    public Set<EduInstitutionClass> getEduInstitutionClasses() {
        return this.eduInstitutionClasses;
    }

    public void setEduInstitutionClasses(Set<EduInstitutionClass> eduInstitutionClasses) {
        this.eduInstitutionClasses = eduInstitutionClasses;
    }
    public String toString()
    {
    	StringBuffer bufRet = new StringBuffer();
    	bufRet.append(super.toString());
    	bufRet.append("institutionName:  " + institutionName + "\r\n");
    	bufRet.append("institutionType:  " + institutionType + "\r\n");
    	bufRet.append("emailAddress:  " + emailAddress + "\r\n");
    	bufRet.append("urlAddress:  " + urlAddress + "\r\n");
    	return bufRet.toString();
    }
}

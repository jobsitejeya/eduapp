package com.edu.app.domain;

// Generated Jul 5, 2008 9:25:16 PM by Hibernate Tools 3.1.0.beta5

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * EduUser generated by hbm2java
 */
@Entity
@Table(name = "edu_user")
public class EduUser extends BaseEntity {

	// Fields
	private EduInstitution eduInstitution;
	private String firstName;
	private String middleName;
	private String lastName;
	private String userName;
	private String pswdText;
	private int userType;
	private String emailAddress;
	private String mobileNumber;
	private Set<EduStudentMessage> eduStudentMessages = new HashSet<EduStudentMessage>(
			0);
	private Set<EduUserStudent> eduUserStudents = new HashSet<EduUserStudent>(0);
	private EduTeacher eduTeacher;

	// Constructors

	/** default constructor */
	public EduUser() {
	}

	// Property accessors

	@ManyToOne(cascade = {}, fetch = FetchType.EAGER)
	@JoinColumn(name = "Fk_Institution_Id", unique = false, nullable = true, insertable = true, updatable = true)
	public EduInstitution getEduInstitution() {
		return this.eduInstitution;
	}

	public void setEduInstitution(EduInstitution eduInstitution) {
		this.eduInstitution = eduInstitution;
	}

	@Column(name = "First_Name", unique = false, nullable = false, insertable = true, updatable = true, length = 64)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "Middle_Name", unique = false, nullable = false, insertable = true, updatable = true, length = 64)
	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	@Column(name = "Last_Name", unique = false, nullable = false, insertable = true, updatable = true, length = 64)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "User_Name", unique = false, nullable = false, insertable = true, updatable = true, length = 64)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "Pswd_Text", unique = false, nullable = false, insertable = true, updatable = true)
	public String getPswdText() {
		return this.pswdText;
	}

	public void setPswdText(String pswdText) {
		this.pswdText = pswdText;
	}

	@Column(name = "User_Type", unique = false, nullable = false, insertable = true, updatable = true)
	public int getUserType() {
		return this.userType;
	}

	public void setUserType(int userType) {
		this.userType = userType;
	}

	@Column(name = "Email_Address", unique = false, nullable = true, insertable = true, updatable = true, length = 124)
	public String getEmailAddress() {
		return this.emailAddress;
	}

	public void setEmailAddress(String emailAddress) {
		this.emailAddress = emailAddress;
	}

	@Column(name = "Mobile_Number", unique = false, nullable = true, insertable = true, updatable = true, length = 64)
	public String getMobileNumber() {
		return this.mobileNumber;
	}

	public void setMobileNumber(String mobileNumber) {
		this.mobileNumber = mobileNumber;
	}

	@OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.EAGER, mappedBy = "eduUser")
	public Set<EduStudentMessage> getEduStudentMessages() {
		return this.eduStudentMessages;
	}

	public void setEduStudentMessages(Set<EduStudentMessage> eduStudentMessages) {
		this.eduStudentMessages = eduStudentMessages;
	}

	@OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.EAGER, mappedBy = "eduUser")
	public Set<EduUserStudent> getEduUserStudents() {
		return this.eduUserStudents;
	}

	public void setEduUserStudents(Set<EduUserStudent> eduUserStudents) {
		this.eduUserStudents = eduUserStudents;
	}

	/**
	 * @return the eduTeacher
	 */
	@OneToOne(cascade = { CascadeType.ALL }, fetch = FetchType.EAGER, mappedBy = "eduUser")
	public EduTeacher getEduTeacher() {
		return eduTeacher;
	}

	/**
	 * @param eduTeacher
	 *            the eduTeacher to set
	 */
	public void setEduTeacher(EduTeacher eduTeacher) {
		this.eduTeacher = eduTeacher;
	}
}